{"version":3,"sources":["db/process.js"],"names":["submitForm","urlElement","window","document","getElementById","bodyElement","methodElement","url","location","hostname","body","value","console","log","req","Request","encodeURI","method","fetch","then","res","json","innerText","JSON","stringify","data","catch","error","err","addEventListener","revealMethod","target","event","hidden"],"mappings":";AAAA,IAAMA,aAAa,SAAbA,UAAa,GAAM;AACrB,QAAMC,aAAaC,OAAOC,QAAP,CAAgBC,cAAhB,CAA+B,KAA/B,CAAnB;AACA,QAAMC,cAAcH,OAAOC,QAAP,CAAgBC,cAAhB,CAA+B,MAA/B,CAApB;AACA,QAAME,gBAAgBH,SAASC,cAAT,CAAwB,QAAxB,CAAtB;;AAEA,QAAIG,WAASL,OAAOM,QAAP,CAAgBC,QAA7B;;AAEA,QAAIC;AACA;AACAJ,kBAAcK,KAAd,KAAwB,KAAxB,IAAiCL,cAAcK,KAAd,KAAwB,QAAzD,GACM,IADN,GAEMN,YAAYM,KAJtB;AAKA;AACAJ,WAAON,WAAWU,KAAlB;;AAEA;AACAC,YAAQC,GAAR,CAAYP,cAAcK,KAA1B;;AAEA,QAAMG,MAAM,IAAIC,OAAJ,CAAYC,UAAUT,GAAV,CAAZ,EAA4B;AACpC;AACAU,gBAAQX,cAAcK,KAFc;AAGpCD,cAAMA;AAH8B,KAA5B,CAAZ;;AAMAQ,UAAMJ,GAAN,EACKK,IADL,CACU,eAAO;AACT,eAAOC,IAAIC,IAAJ,EAAP;AACH,KAHL,EAIKF,IAJL,CAIU,gBAAQ;AACVhB,iBAASC,cAAT,CAAwB,QAAxB,EAAkCkB,SAAlC,GAA8CC,KAAKC,SAAL,CAAeC,IAAf,CAA9C;AACH,KANL,EAOKC,KAPL,CAOW,eAAO;AACVd,gBAAQe,KAAR,CAAcC,GAAd;AACH,KATL;AAUA;AACAhB,YAAQC,GAAR,CAAYZ,WAAWU,KAAvB;AACH,CApCD;;AAsCAT,OAAO2B,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AAClC1B,aACKC,cADL,CACoB,cADpB,EAEKyB,gBAFL,CAEsB,OAFtB,EAE+B7B,UAF/B,EAE2C,KAF3C;AAGAG,aAASC,cAAT,CAAwB,QAAxB,EAAkCyB,gBAAlC,CAAmD,QAAnD,EAA6DC,YAA7D;;AAEAA,iBAAa;AACTC,gBAAQ,EAAEpB,OAAOR,SAASC,cAAT,CAAwB,QAAxB,EAAkCO,KAA3C;AADC,KAAb;AAGH,CATD;;AAWA,SAASmB,YAAT,CAAsBE,KAAtB,EAA6B;AACzB;AACA,QAAIA,MAAMD,MAAN,CAAapB,KAAb,IAAsB,KAAtB,IAA+BqB,MAAMD,MAAN,CAAapB,KAAb,IAAsB,QAAzD,EAAmE;AAC/DR,iBAASC,cAAT,CAAwB,aAAxB,EAAuC6B,MAAvC,GAAgD,IAAhD;AACH,KAFD,MAEO;AACH9B,iBAASC,cAAT,CAAwB,aAAxB,EAAuC6B,MAAvC,GAAgD,KAAhD;AACH;AACJ","file":"process.20d60d3a.map","sourceRoot":"../src","sourcesContent":["const submitForm = () => {\n    const urlElement = window.document.getElementById('url');\n    const bodyElement = window.document.getElementById('body');\n    const methodElement = document.getElementById('method');\n\n    let url = `${window.location.hostname}`;\n\n    let body =\n        // @ts-ignore\n        methodElement.value === 'GET' || methodElement.value === 'DELETE'\n            ? null\n            : bodyElement.value;\n    // @ts-ignore\n    url += urlElement.value;\n\n    // @ts-ignore\n    console.log(methodElement.value);\n\n    const req = new Request(encodeURI(url), {\n        // @ts-ignore\n        method: methodElement.value,\n        body: body,\n    });\n\n    fetch(req)\n        .then(res => {\n            return res.json();\n        })\n        .then(data => {\n            document.getElementById('result').innerText = JSON.stringify(data);\n        })\n        .catch(err => {\n            console.error(err);\n        });\n    // @ts-ignore\n    console.log(urlElement.value);\n};\n\nwindow.addEventListener('load', () => {\n    document\n        .getElementById('submitButton')\n        .addEventListener('click', submitForm, false);\n    document.getElementById('method').addEventListener('change', revealMethod);\n\n    revealMethod({\n        target: { value: document.getElementById('method').value },\n    });\n});\n\nfunction revealMethod(event) {\n    // @ts-ignore\n    if (event.target.value == 'GET' || event.target.value == 'DELETE') {\n        document.getElementById('bodyWrapper').hidden = true;\n    } else {\n        document.getElementById('bodyWrapper').hidden = false;\n    }\n}\n"]}